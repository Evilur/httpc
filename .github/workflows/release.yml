name: Release
on:
    push:
        tags:
            - '*'
jobs:
    linux-build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                build:
                    - arch: amd64
                      package: gcc-x86-64-linux-gnu
                      gcc: x86_64-linux-gnu-gcc
                    - arch: i386
                      package: gcc-i686-linux-gnu
                      gcc: i686-linux-gnu-gcc
                    - arch: arm64
                      package: gcc-aarch64-linux-gnu
                      gcc: aarch64-linux-gnu-gcc
                    - arch: armhf
                      package: gcc-arm-linux-gnueabihf
                      gcc: arm-linux-gnueabihf-gcc
                    - arch: armel
                      package: gcc-arm-linux-gnueabi
                      gcc: arm-linux-gnueabi-gcc
                    - arch: mips
                      package: gcc-mips-linux-gnu
                      gcc: mips-linux-gnu-gcc
                    - arch: mips64el
                      package: gcc-mips64el-linux-gnuabi64
                      gcc: mips64el-linux-gnuabi64-gcc
                    - arch: mipsel
                      package: gcc-mipsel-linux-gnu
                      gcc: mipsel-linux-gnu-gcc
                    - arch: ppc64el
                      package: gcc-powerpc64le-linux-gnu
                      gcc: powerpc64le-linux-gnu-gcc
                    - arch: s390x
                      package: gcc-s390x-linux-gnu
                      gcc: s390x-linux-gnu-gcc
                    - arch: riscv64
                      package: gcc-riscv64-linux-gnu
                      gcc: riscv64-linux-gnu-gcc
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install cross compiler
              run: |
                  sudo apt-get update
                  sudo apt-get install -y ${{ matrix.build.package }}

            - name: Make
              run: make all deb PREFIX=/usr \
                   ARCH=${{ matrix.build.arch }} DEST=linux \
                   CC=${{ matrix.build.gcc }}

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: httpc_linux_${{ matrix.build.arch }}
                  path: deb/httpc_linux_${{ matrix.build.arch }}.deb
                  compression-level: 9
    termux-build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                arch: [aarch64, armv7a, x86_64]
        env:
            ANDROID_NDK: "android-ndk-r28c"
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Android NDK
              run: |
                wget dl.google.com/android/repository/$ANDROID_NDK-linux.zip
                unzip $ANDROID_NDK-linux.zip

            - name: Make
              run: make deb PREFIX=/data/data/com.termux/files/usr \
                   ARCH=${{ matrix.arch }} DEST=termux \
                   CC=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.arch }}-linux-android*35-clang \

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: httpc_termux_${{ matrix.arch }}
                  path: deb/httpc_termux_${{ matrix.arch }}.deb
                  compression-level: 9